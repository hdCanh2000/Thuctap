{"ast":null,"code":"import _toConsumableArray from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\EmployeeDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Dialog, Button, Grid, InputLabel, FormControl, MenuItem, Select, InputAdornment, Checkbox, TextField, DialogActions, FormControlLabel, DialogTitle, DialogContent, TablePagination, IconButton, Icon } from \"@material-ui/core\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getUserByUsername, getUserByEmail, saveUser, addNewUser, getAllRoles, saveHealthOrgByUser, getListHealthOrgByUser } from \"./EmployeeService\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport '../../../styles/views/_loadding.scss';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../../styles/views/_style.scss';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction EmployeeDialog() {\n  var useState = React.useState;\n\n  var _useState = useState([{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Surname',\n    field: 'surname',\n    initialEditValue: 'initial edit value'\n  }, {\n    title: 'Birth Year',\n    field: 'birthYear',\n    type: 'numeric'\n  }, {\n    title: 'Birth Place',\n    field: 'birthCity',\n    lookup: {\n      34: 'İstanbul',\n      63: 'Şanlıurfa'\n    }\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      columns = _useState2[0],\n      setColumns = _useState2[1];\n\n  var _useState3 = useState([]),\n      employee = _useState3.employee,\n      setemployee = _useState3.setemployee;\n\n  useEffect(function () {});\n\n  var _useState4 = useState([{\n    name: 'Mehmet',\n    surname: 'Baran',\n    birthYear: 1987,\n    birthCity: 63\n  }, {\n    name: 'Zerya Betül',\n    surname: 'Baran',\n    birthYear: 2017,\n    birthCity: 34\n  }]),\n      _useState5 = _slicedToArray(_useState4, 2),\n      data = _useState5[0],\n      setData = _useState5[1];\n\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Th\\xF4ng tin nh\\xE2n vi\\xEAn\",\n    columns: columns,\n    data: data,\n    editable: {\n      onRowAdd: function onRowAdd(newData) {\n        return new Promise(function (resolve, reject) {\n          setTimeout(function () {\n            setData([].concat(_toConsumableArray(data), [newData]));\n            resolve();\n          }, 1000);\n        });\n      },\n      onRowUpdate: function onRowUpdate(newData, oldData) {\n        return new Promise(function (resolve, reject) {\n          setTimeout(function () {\n            var dataUpdate = _toConsumableArray(data);\n\n            var index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData(_toConsumableArray(dataUpdate));\n            resolve();\n          }, 1000);\n        });\n      },\n      onRowDelete: function onRowDelete(oldData) {\n        return new Promise(function (resolve, reject) {\n          setTimeout(function () {\n            var dataDelete = _toConsumableArray(data);\n\n            var index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData(_toConsumableArray(dataDelete));\n            resolve();\n          }, 1000);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default EmployeeDialog;","map":{"version":3,"sources":["D:/OCEAN_TECH/L1/ThucTap/client/src/app/views/Employee/EmployeeDialog.jsx"],"names":["React","Component","useState","useEffect","Dialog","Button","Grid","InputLabel","FormControl","MenuItem","Select","InputAdornment","Checkbox","TextField","DialogActions","FormControlLabel","DialogTitle","DialogContent","TablePagination","IconButton","Icon","Breadcrumb","ConfirmationDialog","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","Autocomplete","ValidatorForm","TextValidator","getUserByUsername","getUserByEmail","saveUser","addNewUser","getAllRoles","saveHealthOrgByUser","getListHealthOrgByUser","AsynchronousAutocomplete","Draggable","Paper","clsx","CircularProgress","toast","configure","autoClose","draggable","limit","EmployeeDialog","title","field","initialEditValue","type","lookup","columns","setColumns","employee","setemployee","name","surname","birthYear","birthCity","data","setData","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,WALF,EAMEC,QANF,EAOEC,MAPF,EAQEC,cARF,EASEC,QATF,EAUEC,SAVF,EAWEC,aAXF,EAYEC,gBAZF,EAaEC,WAbF,EAcEC,aAdF,EAeEC,eAfF,EAgBEC,UAhBF,EAiBEC,IAjBF,QAkBO,mBAlBP;AAmBA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,OAA/C;AACA,OAAOC,aAAP,IACEC,aADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,YAJF,QAKO,gBALP;AAMA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SAASC,iBAAT,EAA4BC,cAA5B,EAA4CC,QAA5C,EAAsDC,UAAtD,EAAkEC,WAAlE,EAA+EC,mBAA/E,EAAoGC,sBAApG,QAAkI,mBAAlI;AACA,OAAOC,wBAAP,MAAqC,uCAArC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,OAAO,mCAAP;AACAA,KAAK,CAACC,SAAN,CAAgB;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,SAAS,EAAE,KAFG;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAhB;;AAOA,SAASC,cAAT,GAA0B;AAAA,MAChB9C,QADgB,GACHF,KADG,CAChBE,QADgB;;AAAA,kBAGMA,QAAQ,CAAC,CACrC;AAAE+C,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADqC,EAErC;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE,SAA3B;AAAsCC,IAAAA,gBAAgB,EAAE;AAAxD,GAFqC,EAGrC;AAAEF,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE,WAA9B;AAA2CE,IAAAA,IAAI,EAAE;AAAjD,GAHqC,EAIrC;AACEH,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,KAAK,EAAE,WAFT;AAGEG,IAAAA,MAAM,EAAE;AAAE,UAAI,UAAN;AAAkB,UAAI;AAAtB;AAHV,GAJqC,CAAD,CAHd;AAAA;AAAA,MAGjBC,OAHiB;AAAA,MAGRC,UAHQ;;AAAA,mBAcUrD,QAAQ,CAAC,EAAD,CAdlB;AAAA,MAchBsD,QAdgB,cAchBA,QAdgB;AAAA,MAcNC,WAdM,cAcNA,WAdM;;AAgBxBtD,EAAAA,SAAS,CAAC,YAAM,CAEf,CAFQ,CAAT;;AAhBwB,mBAoBAD,QAAQ,CAAC,CAC/B;AAAEwD,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,OAAO,EAAE,OAA3B;AAAoCC,IAAAA,SAAS,EAAE,IAA/C;AAAqDC,IAAAA,SAAS,EAAE;AAAhE,GAD+B,EAE/B;AAAEH,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAE,OAAhC;AAAyCC,IAAAA,SAAS,EAAE,IAApD;AAA0DC,IAAAA,SAAS,EAAE;AAArE,GAF+B,CAAD,CApBR;AAAA;AAAA,MAoBjBC,IApBiB;AAAA,MAoBXC,OApBW;;AAyBxB,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,8BADR;AAEE,IAAA,OAAO,EAAET,OAFX;AAGE,IAAA,IAAI,EAAEQ,IAHR;AAIE,IAAA,QAAQ,EAAE;AACRE,MAAAA,QAAQ,EAAE,kBAAAC,OAAO;AAAA,eACf,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/BC,UAAAA,UAAU,CAAC,YAAM;AACfN,YAAAA,OAAO,8BAAKD,IAAL,IAAWG,OAAX,GAAP;AAEAE,YAAAA,OAAO;AACR,WAJS,EAIP,IAJO,CAAV;AAKD,SAND,CADe;AAAA,OADT;AASRG,MAAAA,WAAW,EAAE,qBAACL,OAAD,EAAUM,OAAV;AAAA,eACX,IAAIL,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/BC,UAAAA,UAAU,CAAC,YAAM;AACf,gBAAMG,UAAU,sBAAOV,IAAP,CAAhB;;AACA,gBAAMW,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkBC,EAAhC;AACAH,YAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBR,OAApB;AACAF,YAAAA,OAAO,oBAAKS,UAAL,EAAP;AAEAL,YAAAA,OAAO;AACR,WAPS,EAOP,IAPO,CAAV;AAQD,SATD,CADW;AAAA,OATL;AAoBRS,MAAAA,WAAW,EAAE,qBAAAL,OAAO;AAAA,eAClB,IAAIL,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/BC,UAAAA,UAAU,CAAC,YAAM;AACf,gBAAMQ,UAAU,sBAAOf,IAAP,CAAhB;;AACA,gBAAMW,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkBC,EAAhC;AACAE,YAAAA,UAAU,CAACC,MAAX,CAAkBL,KAAlB,EAAyB,CAAzB;AACAV,YAAAA,OAAO,oBAAKc,UAAL,EAAP;AAEAV,YAAAA,OAAO;AACR,WAPS,EAOP,IAPO,CAAV;AAQD,SATD,CADkB;AAAA;AApBZ,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAuCD;;AAED,eAAenB,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  InputAdornment,\r\n  Checkbox,\r\n  TextField,\r\n  DialogActions,\r\n  FormControlLabel,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TablePagination,\r\n  IconButton,\r\n  Icon\r\n} from \"@material-ui/core\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader\r\n} from \"material-table\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { getUserByUsername, getUserByEmail, saveUser, addNewUser, getAllRoles, saveHealthOrgByUser, getListHealthOrgByUser } from \"./EmployeeService\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport '../../../styles/views/_loadding.scss';\r\nimport clsx from 'clsx';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../../styles/views/_style.scss';\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3\r\n});\r\n\r\n\r\nfunction EmployeeDialog() {\r\n  const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: 'Name', field: 'name' },\r\n    { title: 'Surname', field: 'surname', initialEditValue: 'initial edit value' },\r\n    { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n    {\r\n      title: 'Birth Place',\r\n      field: 'birthCity',\r\n      lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n    },\r\n  ]);\r\n\r\n  const { employee, setemployee } = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  const [data, setData] = useState([\r\n    { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n    { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\r\n  ]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Thông tin nhân viên\"\r\n      columns={columns}\r\n      data={data}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n              \r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000)\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              \r\n              resolve()\r\n            }, 1000)\r\n          }),\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default EmployeeDialog;\r\n"]},"metadata":{},"sourceType":"module"}