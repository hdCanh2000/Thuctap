{"ast":null,"code":"import _objectSpread from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\EmployeeDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, DialogActions, FormControl, Paper, DialogTitle, DialogContent, Select, MenuItem, InputLabel, TextField } from \"@material-ui/core\"; // import Paper from '@material-ui/core/Paper'\n\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Draggable from \"react-draggable\";\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\nimport { saveEmployee, updateEmployee, getCommune, getProvince, getDistrict } from \"./EmployeeService\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar EmployeeDialog = /*#__PURE__*/function (_Component) {\n  _inherits(EmployeeDialog, _Component);\n\n  function EmployeeDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EmployeeDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EmployeeDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      id: \"\",\n      name: \"\",\n      code: \"\",\n      phone: \"\",\n      email: \"\",\n      age: \"\",\n      commune: \"\",\n      district: \"\",\n      province: \"\",\n      listCommune: [],\n      listDistrict: [],\n      listProvince: [],\n      type: \"\",\n      shouldOpenNotificationPopup: false,\n      Notification: \"\"\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenNotificationPopup: false\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var _this$state = _this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          code = _this$state.code,\n          phone = _this$state.phone,\n          email = _this$state.email,\n          age = _this$state.age,\n          commune = _this$state.commune,\n          district = _this$state.district,\n          province = _this$state.province;\n      var _this$props = _this.props,\n          t = _this$props.t,\n          itemList = _this$props.itemList;\n\n      var checkCode = function checkCode(listItem, code) {\n        var listCode = [];\n        listItem.forEach(function (element) {\n          listCode.push(element.code);\n        });\n        return listCode.includes(code);\n      };\n\n      var check = checkCode(itemList, code);\n\n      if (id) {\n        updateEmployee(_objectSpread({}, _this.state)).then(function () {\n          toast.success(t(\"general.updateSuccess\"));\n\n          _this.props.handleOKEditClose();\n        });\n      } else {\n        if (check) {\n          toast.warning(t(\"staff.noti.dupli_code\"));\n        } else {\n          saveEmployee({\n            name: name,\n            code: code,\n            phone: phone,\n            email: email,\n            age: age,\n            commune: commune,\n            district: district,\n            province: province\n          }).then(function () {\n            toast.success(t(\"general.addSuccess\"));\n\n            _this.props.handleOKEditClose();\n          });\n        }\n\n        ;\n      }\n\n      ;\n    };\n\n    return _this;\n  }\n\n  _createClass(EmployeeDialog, [{\n    key: \"getDistricts\",\n    value: function getDistricts() {\n      getDistrict({}).then(function (_ref) {\n        var data = _ref.data;\n        console.log(\"12345\", data.data);\n      }).catch(function (err) {\n        return console.log(err);\n      }); // getCommune({})\n      //   .then(({ data }) => this.setState({ listCommune: [...data.data] }))\n      //   .catch(err => console.log(err))\n      // getProvince({})\n      //   .then(({ data }) => this.setState({ listProvince: [...data.data] }))\n      //   .catch(err => console.log(err))\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDistricts();\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          item = _this$props2.item,\n          itemList = _this$props2.itemList;\n      this.setState(_objectSpread({}, item, {\n        itemList: itemList\n      })); //custom rule will have name 'isNameMatch'\n\n      ValidatorForm.addValidationRule('isCodeMatch', function (value) {\n        if (value.length > 10) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove rule when it is not needed\n      ValidatorForm.removeValidationRule('isCodeMatch');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          id = _this$state2.id,\n          name = _this$state2.name,\n          code = _this$state2.code,\n          phone = _this$state2.phone,\n          email = _this$state2.email,\n          age = _this$state2.age,\n          commune = _this$state2.commune,\n          district = _this$state2.district,\n          province = _this$state2.province,\n          listCommune = _this$state2.listCommune,\n          listDistrict = _this$state2.listDistrict,\n          listProvince = _this$state2.listProvince,\n          shouldOpenNotificationPopup = _this$state2.shouldOpenNotificationPopup;\n      var _this$props3 = this.props,\n          open = _this$props3.open,\n          handleClose = _this$props3.handleClose,\n          handleOKEditClose = _this$props3.handleOKEditClose,\n          t = _this$props3.t,\n          i18n = _this$props3.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\",\n          paddingBottom: \"0px\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }\n      }, id ? t(\"general.update\") : t(\"ReceivingAsset.addNew\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 21\n          }\n        }, t(\"staff.code\")),\n        required: true,\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        inputProps: {\n          maxLength: 10\n        },\n        validators: [\"required\", \"matchRegexp:([a-zA-Z0-9]{6,10})$\"],\n        errorMessages: [t(\"general.required\"), \"mã nhân viên từ 6 - 10 kí tự không được chứa ký tự đặc biệt\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 21\n          }\n        }, t(\"staff.name\")),\n        required: true,\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        inputProps: {\n          maxLength: 25\n        },\n        validators: [\"required\", 'matchRegexp:([a-zA-Z])$'],\n        errorMessages: [t(\"general.required\"), \"tên không được chứa số và ký tự đặc biệt\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 21\n          }\n        }, t(\"staff.age\")),\n        required: true,\n        onChange: this.handleChange,\n        type: \"number\",\n        name: \"age\",\n        value: age,\n        validators: [\"required\", 'matchRegexp:(^[0-9]{2})$'],\n        errorMessages: [t(\"general.required\"), \"tuổi gồm 2 chữ số\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 21\n          }\n        }, t(\"staff.phoneNumber\")),\n        required: true,\n        onChange: this.handleChange,\n        type: \"number\",\n        name: \"phone\",\n        value: phone,\n        validators: [\"required\", 'matchRegexp:(^[0-9]{10})$'],\n        errorMessages: [t(\"general.required\"), \"số điện thoại gồm 10 chữ số\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 21\n          }\n        }, t(\"staff.email\")),\n        required: true,\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        validators: [\"required\", 'isEmail'],\n        errorMessages: [t(\"general.required\"), \"email chưa đúng định dạng\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"filled-select-province\",\n        select: true,\n        label: \"T\\u1EC9nh\",\n        name: \"province\",\n        value: province,\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        helperText: \"Please select your province\",\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 17\n        }\n      }, listProvince.map(function (province) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: province.id,\n          value: province,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 21\n          }\n        }, province.name);\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"filled-select-district\",\n        select: true,\n        label: \"Huy\\u1EC7n\",\n        name: \"district\",\n        value: district,\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        helperText: \"Please select your district\",\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 17\n        }\n      }, listDistrict.map(function (district) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: district.id,\n          value: district,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 21\n          }\n        }, district.name);\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"filled-select-commune\",\n        select: true,\n        label: \"X\\xE3\",\n        name: \"commune\",\n        value: commune,\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        helperText: \"Please select your commune\",\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 17\n        }\n      }, listCommune.map(function (commune) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: commune.id,\n          value: commune,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 21\n          }\n        }, commune.name);\n      }))))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle mt-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-12\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 15\n        }\n      }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: \"15px\"\n        },\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 15\n        }\n      }, t(\"general.save\"))))));\n    }\n  }]);\n\n  return EmployeeDialog;\n}(Component);\n\nexport default EmployeeDialog;","map":{"version":3,"sources":["D:/OCEAN_TECH/L1/ThucTap/client/src/app/views/Employee/EmployeeDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","DialogActions","FormControl","Paper","DialogTitle","DialogContent","Select","MenuItem","InputLabel","TextField","ValidatorForm","TextValidator","Draggable","NotificationPopup","saveEmployee","updateEmployee","getCommune","getProvince","getDistrict","toast","configure","autoClose","draggable","limit","PaperComponent","props","EmployeeDialog","state","id","name","code","phone","email","age","commune","district","province","listCommune","listDistrict","listProvince","type","shouldOpenNotificationPopup","Notification","handleDialogClose","setState","handleChange","event","source","persist","isActive","target","checked","value","handleFormSubmit","t","itemList","checkCode","listItem","listCode","forEach","element","push","includes","check","then","success","handleOKEditClose","warning","data","console","log","catch","err","getDistricts","open","handleClose","item","addValidationRule","length","removeValidationRule","i18n","cursor","paddingBottom","maxLength","map","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  DialogActions,\r\n  FormControl,\r\n  Paper,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n// import Paper from '@material-ui/core/Paper'\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport Draggable from \"react-draggable\";\r\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\r\nimport {\r\n  saveEmployee,\r\n  updateEmployee,\r\n  getCommune,\r\n  getProvince,\r\n  getDistrict,\r\n} from \"./EmployeeService\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass EmployeeDialog extends Component {\r\n\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    code: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    age: \"\",\r\n    commune: \"\",\r\n    district: \"\",\r\n    province: \"\",\r\n    listCommune: [],\r\n    listDistrict: [],\r\n    listProvince: [],\r\n    type: \"\",\r\n    shouldOpenNotificationPopup: false,\r\n    Notification: \"\",\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({ shouldOpenNotificationPopup: false });\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n\r\n  };\r\n\r\n\r\n  // handleFormSubmit = () => {\r\n  //   // let { id } = this.state;\r\n  //   // let { code } = this.state;\r\n  //   var { t } = this.props;\r\n  //   // checkCode(id, code).then((result) => {\r\n  //   //   //Nếu trả về true là code đã được sử dụng\r\n  //   //   if (result.data) {\r\n  //   //     toast.warning(t(\"general.dupli_code\"));\r\n  //   //     // alert(\"Code đã được sử dụng\");\r\n  //   //   } else {\r\n  //   //     //Nếu trả về false là code chưa sử dụng có thể dùng\r\n  //   //     if (id) {\r\n  //   //       updateEmployee({\r\n  //   //         ...this.state,\r\n  //   //       }).then(() => {\r\n  //   //         toast.success(t(\"general.updateSuccess\"));\r\n  //   //         this.props.handleOKEditClose();\r\n  //   //       });\r\n  //   //     } else {\r\n  //   //       saveEmployee({\r\n  //   //         ...this.state,\r\n  //   //       }).then(() => {\r\n  //   //         toast.success(t(\"general.addSuccess\"));\r\n  //   //         this.props.handleOKEditClose();\r\n  //   //       });\r\n  //   //     }\r\n  //   //   }\r\n  //   // });\r\n  //   let {\r\n  //     name,\r\n  //     code,\r\n  //     phone,\r\n  //     email,\r\n  //     age,\r\n  //     commune,\r\n  //     district,\r\n  //     province,\r\n  //   } = this.state;\r\n\r\n  //   saveEmployee({\r\n  //     name,\r\n  //     code,\r\n  //     phone,\r\n  //     email,\r\n  //     age,\r\n  //     commune,\r\n  //     district,\r\n  //     province,\r\n  //   }).then(() => {\r\n  //     toast.success(t(\"general.addSuccess\"));\r\n  //     this.props.handleOKEditClose();\r\n  //   });\r\n  // };\r\n\r\n  // checkCode(listItem, code) {\r\n\r\n\r\n\r\n  //   listItem.filter((item) => {\r\n  //     return item === code\r\n  //   })\r\n  // }\r\n\r\n\r\n\r\n  handleFormSubmit = () => {\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      phone,\r\n      email,\r\n      age,\r\n      commune,\r\n      district,\r\n      province,\r\n    } = this.state;\r\n\r\n    var { t, itemList } = this.props;\r\n\r\n    const checkCode = (listItem, code) => {\r\n      var listCode = [];\r\n      listItem.forEach(element => {\r\n        listCode.push(element.code)\r\n      });\r\n      return listCode.includes(code)\r\n    }\r\n\r\n    let check = checkCode(itemList, code)\r\n\r\n    if (id) {\r\n      updateEmployee({\r\n        ...this.state,\r\n      }).then(() => {\r\n        toast.success(t(\"general.updateSuccess\"));\r\n        this.props.handleOKEditClose();\r\n      });\r\n    } else {\r\n      if (check) {\r\n        toast.warning(t(\"staff.noti.dupli_code\"));\r\n      } else {\r\n        saveEmployee({\r\n          name,\r\n          code,\r\n          phone,\r\n          email,\r\n          age,\r\n          commune,\r\n          district,\r\n          province,\r\n        }).then(() => {\r\n          toast.success(t(\"general.addSuccess\"));\r\n          this.props.handleOKEditClose();\r\n        });\r\n      };\r\n    };\r\n  }\r\n\r\n  getDistricts() {\r\n    getDistrict({})\r\n      .then(({ data }) => {console.log(\"12345\",data.data)} )\r\n      .catch(err => console.log(err))\r\n    // getCommune({})\r\n    //   .then(({ data }) => this.setState({ listCommune: [...data.data] }))\r\n    //   .catch(err => console.log(err))\r\n    // getProvince({})\r\n    //   .then(({ data }) => this.setState({ listProvince: [...data.data] }))\r\n    //   .catch(err => console.log(err))\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDistricts();\r\n    let { open, handleClose, item, itemList } = this.props;\r\n    this.setState({ ...item, itemList: itemList });\r\n\r\n\r\n    //custom rule will have name 'isNameMatch'\r\n    ValidatorForm.addValidationRule('isCodeMatch', (value) => {\r\n      if (value.length > 10) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule('isCodeMatch');\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      phone,\r\n      email,\r\n      age,\r\n      commune,\r\n      district,\r\n      province,\r\n      listCommune,\r\n      listDistrict,\r\n      listProvince,\r\n      shouldOpenNotificationPopup,\r\n    } = this.state;\r\n\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          style={{ cursor: \"move\", paddingBottom: \"0px\" }}\r\n          id=\"draggable-dialog-title\"\r\n        >\r\n          <h4 className=\"\">{id ? t(\"general.update\") : t(\"ReceivingAsset.addNew\")}</h4>\r\n        </DialogTitle>\r\n\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n          <DialogContent>\r\n            <Grid className=\"\" container spacing={2}>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      {t(\"staff.code\")}\r\n                    </span>\r\n                  }\r\n                  required\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  inputProps={{ maxLength: 10 }}\r\n                  validators={[\"required\", \"matchRegexp:([a-zA-Z0-9]{6,10})$\"]}\r\n                  errorMessages={[t(\"general.required\"), \"mã nhân viên từ 6 - 10 kí tự không được chứa ký tự đặc biệt\"]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      {t(\"staff.name\")}\r\n                    </span>\r\n                  }\r\n                  required\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  inputProps={{ maxLength: 25 }}\r\n                  validators={[\"required\", 'matchRegexp:([a-zA-Z])$']}\r\n                  errorMessages={[t(\"general.required\"), \"tên không được chứa số và ký tự đặc biệt\"]}\r\n                />\r\n              </Grid>\r\n\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      {t(\"staff.age\")}\r\n                    </span>\r\n                  }\r\n                  required\r\n                  onChange={this.handleChange}\r\n                  type=\"number\"\r\n                  name=\"age\"\r\n                  value={age}\r\n                  validators={[\"required\", 'matchRegexp:(^[0-9]{2})$']}\r\n                  errorMessages={[t(\"general.required\"), \"tuổi gồm 2 chữ số\"]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      {t(\"staff.phoneNumber\")}\r\n                    </span>\r\n                  }\r\n                  required\r\n                  onChange={this.handleChange}\r\n                  type=\"number\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  validators={[\"required\", 'matchRegexp:(^[0-9]{10})$']}\r\n                  errorMessages={[t(\"general.required\"), \"số điện thoại gồm 10 chữ số\"]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      {t(\"staff.email\")}\r\n                    </span>\r\n                  }\r\n                  required\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  validators={[\"required\", 'isEmail']}\r\n                  errorMessages={[t(\"general.required\"), \"email chưa đúng định dạng\"]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={4} xs={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-select-province\"\r\n                  select\r\n                  label=\"Tỉnh\"\r\n                  name=\"province\"\r\n                  value={province}\r\n                  onChange={this.handleChange}\r\n                  validators={[\"required\"]}\r\n                  helperText=\"Please select your province\"\r\n                  variant=\"filled\"\r\n                >\r\n                  {listProvince.map((province) => (\r\n                    <MenuItem key={province.id} value={province}>\r\n                      {province.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item sm={4} xs={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-select-district\"\r\n                  select\r\n                  label=\"Huyện\"\r\n                  name=\"district\"\r\n                  value={district}\r\n                  onChange={this.handleChange}\r\n                  validators={[\"required\"]}\r\n                  helperText=\"Please select your district\"\r\n                  variant=\"filled\"\r\n                >\r\n                  {listDistrict.map((district) => (\r\n                    <MenuItem key={district.id} value={district}>\r\n                      {district.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item sm={4} xs={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-select-commune\"\r\n                  select\r\n                  label=\"Xã\"\r\n                  name=\"commune\"\r\n                  value={commune}\r\n                  onChange={this.handleChange}\r\n                  validators={[\"required\"]}\r\n                  helperText=\"Please select your commune\"\r\n                  variant=\"filled\"\r\n                >\r\n                  {listCommune.map((commune) => (\r\n                    <MenuItem key={commune.id} value={commune}>\r\n                      {commune.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <div className=\"flex flex-space-between flex-middle mt-12\">\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"mr-12\"\r\n                color=\"secondary\"\r\n                onClick={() => this.props.handleClose()}\r\n              >\r\n                {t(\"general.cancel\")}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ marginRight: \"15px\" }}\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                {t(\"general.save\")}\r\n              </Button>\r\n            </div>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeDialog;\r\n"]},"metadata":{},"sourceType":"module"}