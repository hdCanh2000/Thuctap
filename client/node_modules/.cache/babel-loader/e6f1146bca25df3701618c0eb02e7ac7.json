{"ast":null,"code":"import _toConsumableArray from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\EmDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, DialogActions, FormControl, Paper, DialogTitle, DialogContent } from \"@material-ui/core\"; // import Paper from '@material-ui/core/Paper'\n\nimport { ValidatorForm, TextValidator, TextField, MenuItem } from \"react-material-ui-form-validator\";\nimport Draggable from \"react-draggable\";\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\nimport { saveEmployee, updateEmployee, checkCode } from \"./EmployeeService\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar EmployeeDialog = /*#__PURE__*/function (_Component) {\n  _inherits(EmployeeDialog, _Component);\n\n  function EmployeeDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EmployeeDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EmployeeDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleFormSubmit = function () {\n      var _this$state = _this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          code = _this$state.code,\n          phone = _this$state.phone,\n          email = _this$state.email,\n          age = _this$state.age,\n          commune = _this$state.commune,\n          district = _this$state.district,\n          province = _this$state.province;\n      var _this$props = _this.props,\n          t = _this$props.t,\n          itemList = _this$props.itemList;\n\n      var checkCode = function checkCode(listItem, code) {\n        var listCode = [];\n        listItem.forEach(function (element) {\n          listCode.push(element.code);\n        });\n        return listCode.includes(code);\n      };\n\n      var check = checkCode(itemList, code);\n\n      if (id) {\n        updateEmployee(_objectSpread({}, _this.state)).then(function () {\n          toast.success(t(\"general.updateSuccess\"));\n\n          _this.props.handleOKEditClose();\n        });\n      } else {\n        if (check) {\n          toast.warning(t(\"staff.noti.dupli_code\"));\n        } else {\n          saveEmployee({\n            name: name,\n            code: code,\n            phone: phone,\n            email: email,\n            age: age,\n            commune: commune,\n            district: district,\n            province: province\n          }).then(function () {\n            toast.success(t(\"general.addSuccess\"));\n\n            _this.props.handleOKEditClose();\n          });\n        }\n\n        ;\n      }\n\n      ;\n    };\n\n    return _this;\n  }\n\n  _createClass(EmployeeDialog, [{\n    key: \"getDistricts\",\n    value: function getDistricts() {\n      var _this2 = this;\n\n      getDistrict({}).then(function (_ref) {\n        var data = _ref.data;\n        return _this2.setState({\n          listDistrict: _toConsumableArray(data.data)\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      getCommune({}).then(function (_ref2) {\n        var data = _ref2.data;\n        return _this2.setState({\n          listCommune: _toConsumableArray(data.data)\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      getProvince({}).then(function (_ref3) {\n        var data = _ref3.data;\n        return _this2.setState({\n          listProvince: _toConsumableArray(data.data)\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n      // let { open, handleClose, item } = this.props;\n      // this.setState({...item});\n      this.getDistricts();\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          item = _this$props2.item,\n          itemList = _this$props2.itemList;\n      this.setState(_objectSpread({}, item, {\n        itemList: itemList\n      })); //custom rule will have name 'isNameMatch'\n\n      ValidatorForm.addValidationRule('isCodeMatch', function (value) {\n        if (value.length > 10) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove rule when it is not needed\n      ValidatorForm.removeValidationRule('isCodeMatch');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          id = _this$state2.id,\n          name = _this$state2.name,\n          code = _this$state2.code,\n          phone = _this$state2.phone,\n          email = _this$state2.email,\n          age = _this$state2.age,\n          commune = _this$state2.commune,\n          district = _this$state2.district,\n          province = _this$state2.province,\n          listCommune = _this$state2.listCommune,\n          listDistrict = _this$state2.listDistrict,\n          listProvince = _this$state2.listProvince,\n          shouldOpenNotificationPopup = _this$state2.shouldOpenNotificationPopup;\n      var _this$props3 = this.props,\n          open = _this$props3.open,\n          handleClose = _this$props3.handleClose,\n          handleOKEditClose = _this$props3.handleOKEditClose,\n          t = _this$props3.t,\n          i18n = _this$props3.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\",\n          paddingBottom: \"0px\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }\n      }, id ? t(\"general.update\") : t(\"general.addNew\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.name\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"staff.age\")),\n        onChange: this.handleChange,\n        type: \"number\",\n        name: \"age\",\n        value: age,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.code\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.email\")),\n        onChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"staff.phoneNumber\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"phone\",\n        value: phone,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"filled-select-province\",\n        select: true,\n        label: \"T\\u1EC9nh\",\n        name: \"province\",\n        value: province,\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        helperText: \"Please select your province\",\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }\n      }, listProvince.map(function (province) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: province.id,\n          value: province,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }\n        }, province.name);\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"filled-select-district\",\n        select: true,\n        label: \"Huy\\u1EC7n\",\n        name: \"district\",\n        value: district,\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        helperText: \"Please select your district\",\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 17\n        }\n      }, listDistrict.map(function (district) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: district.id,\n          value: district,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 21\n          }\n        }, district.name);\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"filled-select-commune\",\n        select: true,\n        label: \"X\\xE3\",\n        name: \"commune\",\n        value: commune,\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        helperText: \"Please select your commune\",\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }\n      }, listCommune.map(function (commune) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: commune.id,\n          value: commune,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 21\n          }\n        }, commune.name);\n      }))))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle mt-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-12\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this3.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }\n      }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: \"15px\"\n        } // onSubmit={() => {this.props.handleFormSubmit()}}\n        ,\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 15\n        }\n      }, t(\"general.save\"))))));\n    }\n  }]);\n\n  return EmployeeDialog;\n}(Component);\n\nexport default EmployeeDialog;","map":{"version":3,"sources":["D:/OCEAN_TECH/L1/ThucTap/client/src/app/views/Employee/EmDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","DialogActions","FormControl","Paper","DialogTitle","DialogContent","ValidatorForm","TextValidator","TextField","MenuItem","Draggable","NotificationPopup","saveEmployee","updateEmployee","checkCode","toast","configure","autoClose","draggable","limit","PaperComponent","props","EmployeeDialog","handleFormSubmit","state","id","name","code","phone","email","age","commune","district","province","t","itemList","listItem","listCode","forEach","element","push","includes","check","then","success","handleOKEditClose","warning","getDistrict","data","setState","listDistrict","catch","err","console","log","getCommune","listCommune","getProvince","listProvince","getDistricts","open","handleClose","item","addValidationRule","value","length","removeValidationRule","shouldOpenNotificationPopup","i18n","cursor","paddingBottom","color","handleChange","map","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  DialogActions,\r\n  FormControl,\r\n  Paper,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\n// import Paper from '@material-ui/core/Paper'\r\nimport { ValidatorForm, TextValidator, TextField, MenuItem } from \"react-material-ui-form-validator\";\r\nimport Draggable from \"react-draggable\";\r\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\r\nimport {\r\n  saveEmployee,\r\n  updateEmployee,\r\n  checkCode,\r\n} from \"./EmployeeService\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass EmployeeDialog extends Component {\r\n  // state = {\r\n  //   id: \"\",\r\n  //   name: \"\",\r\n  //   code: \"\",\r\n  //   age: \"\",\r\n  //   email: \"\",\r\n  //   phone: \"\",\r\n  //   commune: \"\",\r\n  //   district: \"\",\r\n  //   province: \"\",\r\n  //   description: \"\",\r\n  //   type: \"\",\r\n  //   shouldOpenNotificationPopup: false,\r\n  //   Notification: \"\",\r\n  // };\r\n\r\n  // handleDialogClose = () => {\r\n  //   this.setState({ shouldOpenNotificationPopup: false });\r\n  // };\r\n\r\n  // handleChange = (event, source) => {\r\n  //   event.persist();\r\n  //   if (source === \"switch\") {\r\n  //     this.setState({ isActive: event.target.checked });\r\n  //     return;\r\n  //   }\r\n  //   this.setState({\r\n  //     [event.target.name]: event.target.value,\r\n  //     [event.target.age]: event.target.value,\r\n  //     [event.target.code]: event.target.value,\r\n  //     [event.target.email]: event.target.value,\r\n  //     [event.target.phone]: event.target.value,\r\n  //     [event.target.commune]: event.target.value,\r\n  //     [event.target.district]: event.target.value,\r\n  //     [event.target.province]: event.target.value,\r\n  //   });\r\n  //   console.log(\"event: \", this.state);\r\n  // };\r\n\r\n  // handleFormSubmit = () => {\r\n  //   let { id } = this.state;\r\n  //   let { code } = this.state;\r\n  //   let { name } = this.state;\r\n  //   let { age } = this.state;\r\n  //   let { email } = this.state;\r\n  //   let { phone } = this.state;\r\n  //   let { commune } = this.state;\r\n  //   let { province } = this.state;\r\n  //   let { district } = this.state;\r\n  //   var { t } = this.props;\r\n  //   checkCode(id, code, name, age, email, phone, commune, province, district).then((result) => {\r\n  //     //Nếu trả về true là code đã được sử dụng\r\n  //     if (result.data) {\r\n  //       toast.warning(t(\"general.dupli_code\"));\r\n  //       // alert(\"Code đã được sử dụng\");\r\n  //     } else {\r\n  //       //Nếu trả về false là code chưa sử dụng có thể dùng\r\n  //       if (id) {\r\n  //         updateEmployee({\r\n  //           ...this.state,\r\n  //         }).then(() => {\r\n  //           toast.success(t(\"general.updateSuccess\"));\r\n  //           this.props.handleOKEditClose();\r\n  //         });\r\n  //       } else {\r\n  //         saveEmployee({\r\n  //           ...this.state,\r\n  //         }).then(() => {\r\n  //           toast.success(t(\"general.addSuccess\"));\r\n  //           this.props.handleOKEditClose();\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  handleFormSubmit = () => {\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      phone,\r\n      email,\r\n      age,\r\n      commune,\r\n      district,\r\n      province,\r\n    } = this.state;\r\n\r\n    var { t, itemList } = this.props;\r\n\r\n    const checkCode = (listItem, code) => {\r\n      var listCode = [];\r\n      listItem.forEach(element => {\r\n        listCode.push(element.code)\r\n      });\r\n      return listCode.includes(code)\r\n    }\r\n\r\n    let check = checkCode(itemList, code)\r\n\r\n    if (id) {\r\n      updateEmployee({\r\n        ...this.state,\r\n      }).then(() => {\r\n        toast.success(t(\"general.updateSuccess\"));\r\n        this.props.handleOKEditClose();\r\n      });\r\n    } else {\r\n      if (check) {\r\n        toast.warning(t(\"staff.noti.dupli_code\"));\r\n      } else {\r\n        saveEmployee({\r\n          name,\r\n          code,\r\n          phone,\r\n          email,\r\n          age,\r\n          commune,\r\n          district,\r\n          province,\r\n        }).then(() => {\r\n          toast.success(t(\"general.addSuccess\"));\r\n          this.props.handleOKEditClose();\r\n        });\r\n      };\r\n    };\r\n  }\r\n\r\n  getDistricts() {\r\n    getDistrict({})\r\n      .then(({ data }) => this.setState({ listDistrict: [...data.data] }))\r\n      .catch(err => console.log(err))\r\n    getCommune({})\r\n      .then(({ data }) => this.setState({ listCommune: [...data.data] }))\r\n      .catch(err => console.log(err))\r\n    getProvince({})\r\n      .then(({ data }) => this.setState({ listProvince: [...data.data] }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  componentWillMount() {\r\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\r\n    // let { open, handleClose, item } = this.props;\r\n    // this.setState({...item});\r\n    this.getDistricts();\r\n    let { open, handleClose, item, itemList } = this.props;\r\n    this.setState({ ...item, itemList: itemList });\r\n\r\n\r\n    //custom rule will have name 'isNameMatch'\r\n    ValidatorForm.addValidationRule('isCodeMatch', (value) => {\r\n      if (value.length > 10) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule('isCodeMatch');\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      phone,\r\n      email,\r\n      age,\r\n      commune,\r\n      district,\r\n      province,\r\n      listCommune,\r\n      listDistrict,\r\n      listProvince,\r\n      shouldOpenNotificationPopup,\r\n    } = this.state;\r\n\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          style={{ cursor: \"move\", paddingBottom: \"0px\" }}\r\n          id=\"draggable-dialog-title\"\r\n        >\r\n          <h4 className=\"\">{id ? t(\"general.update\") : t(\"general.addNew\")}</h4>\r\n        </DialogTitle>\r\n\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n          <DialogContent>\r\n            <Grid className=\"\" container spacing={2}>\r\n              {/* name */}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.name\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n                  {/* age */}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"staff.age\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"number\"\r\n                  name=\"age\"\r\n                  value={age}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n                  {/* code */}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.code\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n                  {/* mail */}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.email\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n                  {/* phone */}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"staff.phoneNumber\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={4} xs={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-select-province\"\r\n                  select\r\n                  label=\"Tỉnh\"\r\n                  name=\"province\"\r\n                  value={province}\r\n                  onChange={this.handleChange}\r\n                  validators={[\"required\"]}\r\n                  helperText=\"Please select your province\"\r\n                  variant=\"filled\"\r\n                >\r\n                  {listProvince.map((province) => (\r\n                    <MenuItem key={province.id} value={province}>\r\n                      {province.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item sm={4} xs={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-select-district\"\r\n                  select\r\n                  label=\"Huyện\"\r\n                  name=\"district\"\r\n                  value={district}\r\n                  onChange={this.handleChange}\r\n                  validators={[\"required\"]}\r\n                  helperText=\"Please select your district\"\r\n                  variant=\"filled\"\r\n                >\r\n                  {listDistrict.map((district) => (\r\n                    <MenuItem key={district.id} value={district}>\r\n                      {district.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item sm={4} xs={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-select-commune\"\r\n                  select\r\n                  label=\"Xã\"\r\n                  name=\"commune\"\r\n                  value={commune}\r\n                  onChange={this.handleChange}\r\n                  validators={[\"required\"]}\r\n                  helperText=\"Please select your commune\"\r\n                  variant=\"filled\"\r\n                >\r\n                  {listCommune.map((commune) => (\r\n                    <MenuItem key={commune.id} value={commune}>\r\n                      {commune.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div className=\"flex flex-space-between flex-middle mt-12\">\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"mr-12\"\r\n                color=\"secondary\"\r\n                onClick={() => this.props.handleClose()}\r\n              >\r\n                {t(\"general.cancel\")}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ marginRight: \"15px\" }}\r\n                // onSubmit={() => {this.props.handleFormSubmit()}}\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                {t(\"general.save\")}\r\n              </Button>\r\n            </div>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeDialog;\r\n"]},"metadata":{},"sourceType":"module"}