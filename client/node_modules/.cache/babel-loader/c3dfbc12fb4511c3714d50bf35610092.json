{"ast":null,"code":"import _slicedToArray from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\Employee.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, TextField, IconButton, Icon, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Tooltip, FormControl, Input, InputAdornment } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { getAllEmployee, getItemById } from \"./EmployeeService\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport shortid from \"shortid\";\nimport { saveAs } from \"file-saver\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { toast } from \"react-toastify\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"edit\")));\n}\n\nfunction EmployeeInfo(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  useEffect(function () {\n    getAllEmployee({\n      code: null,\n      name: null\n    }).then(function (res) {\n      setPosts(res.data.data);\n      console.log(res.data.data);\n    }).catch(function (error) {\n      return console.log(\"Error: \".concat(error));\n    });\n  }, []);\n  var _this$props = this.props,\n      t = _this$props.t,\n      i18n = _this$props.i18n;\n  var columns = [{\n    title: t(\"Action\"),\n    field: \"custom\",\n    align: \"left\",\n    width: \"250\",\n    render: function render(rowData) {\n      return /*#__PURE__*/React.createElement(MaterialButton, {\n        item: rowData,\n        onSelect: function onSelect(rowData, method) {\n          if (method === 0) {\n            getItemById(rowData.id).then(function (_ref) {\n              var data = _ref.data;\n\n              if (data.parent === null) {\n                data.parent = {};\n              }\n\n              _this.setState({\n                item: data,\n                shouldOpenEditorDialog: true\n              });\n            });\n          } else if (method === 1) {\n            _this.handleDelete(rowData.id);\n          } else {\n            alert('Call Selected Here:' + rowData.id);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 28\n        }\n      });\n    }\n  }, {\n    title: t(\"username\"),\n    field: \"username\",\n    width: \"150\"\n  }, {\n    title: t(\"user.displayName\"),\n    field: \"person.displayName\",\n    width: \"150\"\n  }, {\n    title: t(\"general.email\"),\n    field: \"email\",\n    align: \"left\",\n    width: \"150\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-sm-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-sm-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    routeSegments: [{\n      name: t(\"Dashboard.manage\"),\n      path: \"/directory/apartment\"\n    }, {\n      name: t('user.title')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 5,\n    md: 5,\n    sm: 5,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mb-16 mr-16 align-bottom\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      _this.handleEditItem({\n        startDate: new Date(),\n        endDate: new Date(),\n        isAddNew: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, t('Add')))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    title: t(\"confirm\"),\n    open: shouldOpenConfirmationDialog,\n    onConfirmDialogClose: this.handleDialogClose,\n    onYesClick: this.handleConfirmationResponse,\n    text: t('DeleteConfirm'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: t('List'),\n    data: itemList,\n    columns: columns //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n    ,\n    parentChildData: function parentChildData(row, rows) {\n      var list = rows.find(function (a) {\n        return a.id === row.parentId;\n      });\n      return list;\n    } // options={{\n    //   selection: false,\n    //   actionsColumnIndex: 0,\n    //   paging: false,\n    //   search: false\n    // }}\n    ,\n    components: {\n      Toolbar: function Toolbar(props) {\n        return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }\n        }));\n      }\n    },\n    onSelectionChange: function onSelectionChange(rows) {\n      _this.data = rows; // this.setState({selectedItems:rows});\n    },\n    options: {\n      selection: false,\n      actionsColumnIndex: -1,\n      paging: false,\n      search: false,\n      rowStyle: function rowStyle(rowData, index) {\n        return {\n          backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n        };\n      },\n      maxBodyHeight: '450px',\n      minBodyHeight: '370px',\n      headerStyle: {\n        backgroundColor: '#358600',\n        color: '#fff'\n      },\n      padding: 'dense',\n      toolbar: false\n    },\n    localization: {\n      body: {\n        emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TablePagination, {\n    align: \"left\",\n    className: \"px-16\",\n    rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n    component: \"div\",\n    labelRowsPerPage: t('general.rows_per_page'),\n    labelDisplayedRows: function labelDisplayedRows(_ref2) {\n      var from = _ref2.from,\n          to = _ref2.to,\n          count = _ref2.count;\n      return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n    },\n    count: totalElements,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      \"aria-label\": \"Previous Page\"\n    },\n    nextIconButtonProps: {\n      \"aria-label\": \"Next Page\"\n    },\n    onChangePage: this.handleChangePage,\n    onChangeRowsPerPage: this.setRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }))); // return (\n  //   <div style={{padding: 50}}>\n  //     {posts.map(item => (\n  //       <li key={item.id}>\n  //         <p>{item.id}</p>\n  //         <p>{item.name}</p>\n  //         <p>{item.age}</p>\n  //         <p>{item.email}</p>\n  //         <p>{item.phone}</p>\n  //       </li>\n  //     ))}\n  //   </div>\n  //   // <MaterialTable\n  //   //   title=\"Thông tin nhân viên\"\n  //   //   // columns={setPosts.map()}\n  //   //   data={posts}\n  //   //   editable={{\n  //   //     onRowAdd: (newData) =>\n  //   //       new Promise((resolve, reject) => {\n  //   //         setTimeout(() => {\n  //   //           setPosts([...posts, newData]);\n  //   //           resolve();\n  //   //         }, 1000);\n  //   //       }),\n  //   //     onRowUpdate: (newData, oldData) =>\n  //   //       new Promise((resolve, reject) => {\n  //   //         setTimeout(() => {\n  //   //           const dataUpdate = [...posts];\n  //   //           const index = oldData.tableData.id;\n  //   //           dataUpdate[index] = newData;\n  //   //           setPosts([...dataUpdate]);\n  //   //           resolve();\n  //   //         }, 1000);\n  //   //       }),\n  //   //     onRowDelete: (oldData) =>\n  //   //       new Promise((resolve, reject) => {\n  //   //         setTimeout(() => {\n  //   //           const dataDelete = [...posts];\n  //   //           const index = oldData.tableData.id;\n  //   //           dataDelete.splice(index, 1);\n  //   //           setPosts([...dataDelete]);\n  //   //           resolve();\n  //   //         }, 1000);\n  //   //       }),\n  //   //   }}\n  //   // />\n  // );\n}\n\nexport default EmployeeInfo;","map":{"version":3,"sources":["D:/OCEAN_TECH/L1/ThucTap/client/src/app/views/Employee/Employee.jsx"],"names":["React","Component","Grid","TextField","IconButton","Icon","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","Tooltip","FormControl","Input","InputAdornment","Link","SearchIcon","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","getAllEmployee","getItemById","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","shortid","saveAs","useEffect","useState","axios","withStyles","toast","configure","autoClose","draggable","limit","MaterialButton","props","t","i18n","item","onSelect","EmployeeInfo","posts","setPosts","code","name","then","res","data","console","log","catch","error","columns","title","field","align","width","render","rowData","method","id","parent","setState","shouldOpenEditorDialog","handleDelete","alert","path","handleEditItem","startDate","Date","endDate","isAddNew","shouldOpenConfirmationDialog","handleDialogClose","handleConfirmationResponse","itemList","row","rows","list","find","a","parentId","Toolbar","selection","actionsColumnIndex","paging","search","rowStyle","index","backgroundColor","maxBodyHeight","minBodyHeight","headerStyle","color","padding","toolbar","body","emptyDataSourceMessage","from","to","count","totalElements","rowsPerPage","page","handleChangePage","setRowsPerPage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  Icon,\r\n  Button,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  Checkbox,\r\n  TablePagination,\r\n  Tooltip,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader,\r\n} from \"material-table\";\r\nimport { getAllEmployee,getItemById } from \"./EmployeeService\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport shortid from \"shortid\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { toast } from \"react-toastify\";\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\n\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n      <Icon fontSize=\"small\" color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\n\r\nfunction EmployeeInfo(props) {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllEmployee({ code: null, name: null })\r\n      .then(res => {\r\n        setPosts(res.data.data)\r\n        console.log(res.data.data)\r\n      })\r\n      .catch(error => console.log(`Error: ${error}`));\r\n  }, []);\r\n\r\n  const { t, i18n } = this.props;\r\n\r\n    let columns = [\r\n      {\r\n        title: t(\"Action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData => <MaterialButton item={rowData}\r\n          onSelect={(rowData, method) => {\r\n            if (method === 0) {\r\n              getItemById(rowData.id).then(({ data }) => {\r\n                if (data.parent === null) {\r\n                  data.parent = {};\r\n                }\r\n                this.setState({\r\n                  item: data,\r\n                  shouldOpenEditorDialog: true\r\n                });\r\n              })\r\n            } else if (method === 1) {\r\n              this.handleDelete(rowData.id);\r\n            } else {\r\n              alert('Call Selected Here:' + rowData.id);\r\n            }\r\n          }}\r\n        />\r\n      },\r\n      { title: t(\"username\"), field: \"username\", width: \"150\" },\r\n      { title: t(\"user.displayName\"), field: \"person.displayName\", width: \"150\" },\r\n      { title: t(\"general.email\"), field: \"email\", align: \"left\", width: \"150\" },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: t(\"Dashboard.manage\"), path: \"/directory/apartment\" },{ name: t('user.title') }]} />\r\n        </div>\r\n\r\n        <Grid container spacing={3}>\r\n          \r\n          <Grid item lg={5} md={5} sm={5} xs={12}>\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleEditItem({ startDate: new Date(), endDate: new Date(), isAddNew: true });\r\n              }\r\n              }\r\n            >\r\n              {t('Add')}\r\n            </Button>\r\n            {/* {shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                text={t('DeleteAllConfirm')}\r\n              />\r\n            )} */}\r\n            </Grid>\r\n            {/* <TextField\r\n              label={t('EnterSearch')}\r\n              className=\"mb-16 mr-10\"\r\n              type=\"text\"\r\n              name=\"keyword\"\r\n              value={keyword}\r\n              onKeyDown={this.handleKeyDownEnterSearch}\r\n              onChange={this.handleTextChange} />\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\" onClick={() => this.search(keyword)}>\r\n              {t('Search')}\r\n            </Button> */}\r\n\r\n            {/* <Grid item lg={7} md={7} sm={7} xs={12}>\r\n            <Input\r\n              label={t('EnterSearch')}\r\n              type=\"text\"\r\n              name=\"keyword\"\r\n              value={keyword}\r\n              onChange={this.handleTextChange}\r\n              onKeyDown={this.handleKeyDownEnterSearch}\r\n              className=\"w-100 mb-16 mr-10 stylePlaceholder\"\r\n              id=\"search_box\"\r\n              placeholder={t('general.enterSearch')}\r\n              startAdornment={\r\n                <InputAdornment >\r\n                  <Link to=\"#\">\r\n                    <SearchIcon\r\n                    onClick={() => this.search(keyword)}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"0\",\r\n                      right: \"0\"\r\n                    }} /></Link>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </Grid> */}\r\n\r\n\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              {/* {shouldOpenEditorDialog && (\r\n                <UserEditorDialog t={t} i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={shouldOpenEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  item={item}\r\n                />\r\n              )} */}\r\n\r\n              {shouldOpenConfirmationDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"confirm\")}\r\n                  open={shouldOpenConfirmationDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationResponse}\r\n                  text={t('DeleteConfirm')}\r\n                />\r\n              )}\r\n            </div>\r\n            <MaterialTable\r\n              title={t('List')}\r\n              data={itemList}\r\n              columns={columns}\r\n              //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n              parentChildData={(row, rows) => {\r\n                var list = rows.find(a => a.id === row.parentId);\r\n                return list;\r\n              }}\r\n              // options={{\r\n              //   selection: false,\r\n              //   actionsColumnIndex: 0,\r\n              //   paging: false,\r\n              //   search: false\r\n              // }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <MTableToolbar {...props} />\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n                // this.setState({selectedItems:rows});\r\n              }}\r\n              options={{\r\n                selection: false,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: (rowData, index) => ({\r\n                  backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\r\n                }), \r\n                maxBodyHeight: '450px',\r\n                minBodyHeight: '370px',\r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color:'#fff',\r\n                },\r\n                padding: 'dense',\r\n                toolbar: false\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            />\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t('general.rows_per_page')}\r\n              labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n              count={totalElements}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Grid>\r\n      \r\n      </div>\r\n    );\r\n\r\n  // return (\r\n  //   <div style={{padding: 50}}>\r\n  //     {posts.map(item => (\r\n  //       <li key={item.id}>\r\n  //         <p>{item.id}</p>\r\n  //         <p>{item.name}</p>\r\n  //         <p>{item.age}</p>\r\n  //         <p>{item.email}</p>\r\n  //         <p>{item.phone}</p>\r\n  //       </li>\r\n  //     ))}\r\n  //   </div>\r\n  //   // <MaterialTable\r\n  //   //   title=\"Thông tin nhân viên\"\r\n  //   //   // columns={setPosts.map()}\r\n  //   //   data={posts}\r\n  //   //   editable={{\r\n  //   //     onRowAdd: (newData) =>\r\n  //   //       new Promise((resolve, reject) => {\r\n  //   //         setTimeout(() => {\r\n  //   //           setPosts([...posts, newData]);\r\n\r\n  //   //           resolve();\r\n  //   //         }, 1000);\r\n  //   //       }),\r\n  //   //     onRowUpdate: (newData, oldData) =>\r\n  //   //       new Promise((resolve, reject) => {\r\n  //   //         setTimeout(() => {\r\n  //   //           const dataUpdate = [...posts];\r\n  //   //           const index = oldData.tableData.id;\r\n  //   //           dataUpdate[index] = newData;\r\n  //   //           setPosts([...dataUpdate]);\r\n\r\n  //   //           resolve();\r\n  //   //         }, 1000);\r\n  //   //       }),\r\n  //   //     onRowDelete: (oldData) =>\r\n  //   //       new Promise((resolve, reject) => {\r\n  //   //         setTimeout(() => {\r\n  //   //           const dataDelete = [...posts];\r\n  //   //           const index = oldData.tableData.id;\r\n  //   //           dataDelete.splice(index, 1);\r\n  //   //           setPosts([...dataDelete]);\r\n\r\n  //   //           resolve();\r\n  //   //         }, 1000);\r\n  //   //       }),\r\n  //   //   }}\r\n  //   // />\r\n  // );\r\n}\r\n\r\nexport default EmployeeInfo;\r\n"]},"metadata":{},"sourceType":"module"}