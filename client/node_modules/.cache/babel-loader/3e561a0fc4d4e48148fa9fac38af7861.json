{"ast":null,"code":"import _objectSpread from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\EmDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, DialogActions, FormControl, Paper, DialogTitle, DialogContent } from \"@material-ui/core\"; // import Paper from '@material-ui/core/Paper'\n\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Draggable from \"react-draggable\";\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\nimport { saveItem, addItem, updateItem, checkCode } from \"./EmployeeService\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar CategoryDialog = /*#__PURE__*/function (_Component) {\n  _inherits(CategoryDialog, _Component);\n\n  function CategoryDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CategoryDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CategoryDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      id: \"\",\n      name: \"\",\n      code: \"\",\n      description: \"\",\n      type: \"\",\n      shouldOpenNotificationPopup: false,\n      Notification: \"\"\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenNotificationPopup: false\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var code = _this.state.code;\n      var t = _this.props.t;\n      checkCode(id, code).then(function (result) {\n        //Nếu trả về true là code đã được sử dụng\n        if (result.data) {\n          toast.warning(t(\"general.dupli_code\")); // alert(\"Code đã được sử dụng\");\n        } else {\n          //Nếu trả về false là code chưa sử dụng có thể dùng\n          if (id) {\n            updateItem(_objectSpread({}, _this.state)).then(function () {\n              toast.success(t(\"general.updateSuccess\"));\n\n              _this.props.handleOKEditClose();\n            });\n          } else {\n            saveItem(_objectSpread({}, _this.state)).then(function () {\n              toast.success(t(\"general.addSuccess\"));\n\n              _this.props.handleOKEditClose();\n            });\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoryDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(_objectSpread({}, item));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          code = _this$state.code,\n          age = _this$state.age,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          commune = _this$state.commune,\n          district = _this$state.district,\n          province = _this$state.province,\n          description = _this$state.description,\n          shouldOpenNotificationPopup = _this$state.shouldOpenNotificationPopup;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\",\n          paddingBottom: \"0px\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, id ? t(\"general.update\") : t(\"general.add\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.name\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.age\")),\n        onChange: this.handleChange,\n        type: \"number\",\n        name: \"age\",\n        value: age,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.code\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.email\")),\n        onChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.phone\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"phone\",\n        value: phone,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.commune\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"commune\",\n        value: commune,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.district\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"district\",\n        value: district,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          for: \"province\",\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }\n        }, \"*\"), t(\"general.province\")), /*#__PURE__*/React.createElement(\"select\", {\n          id: \"province\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"hn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }\n        }, \"H\\xE0 N\\u1ED9i\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"saab\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }\n        }, \"Ninh B\\xECnh\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"vw\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }\n        }, \"Th\\xE1i Nguy\\xEAn\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: [t(\"general.province\")],\n          selected: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }\n        }, \"Audi\"))),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"province\",\n        value: province,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle mt-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-12\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }\n      }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: \"15px\"\n        },\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }\n      }, t(\"general.save\"))))));\n    }\n  }]);\n\n  return CategoryDialog;\n}(Component);\n\nexport default CategoryDialog;","map":{"version":3,"sources":["D:/OCEAN_TECH/L1/ThucTap/client/src/app/views/Employee/EmDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","DialogActions","FormControl","Paper","DialogTitle","DialogContent","ValidatorForm","TextValidator","Draggable","NotificationPopup","saveItem","addItem","updateItem","checkCode","toast","configure","autoClose","draggable","limit","PaperComponent","props","CategoryDialog","state","id","name","code","description","type","shouldOpenNotificationPopup","Notification","handleDialogClose","setState","handleChange","event","source","persist","isActive","target","checked","value","handleFormSubmit","t","then","result","data","warning","success","handleOKEditClose","open","handleClose","item","age","email","phone","commune","district","province","i18n","cursor","paddingBottom","color","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  DialogActions,\r\n  FormControl,\r\n  Paper,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\n// import Paper from '@material-ui/core/Paper'\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport Draggable from \"react-draggable\";\r\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\r\nimport {\r\n    saveItem,\r\n  addItem,\r\n  updateItem,\r\n  checkCode,\r\n} from \"./EmployeeService\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass CategoryDialog extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    code: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    shouldOpenNotificationPopup: false,\r\n    Notification: \"\",\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({ shouldOpenNotificationPopup: false });\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state;\r\n    let { code } = this.state;\r\n    var { t } = this.props;\r\n    checkCode(id, code).then((result) => {\r\n      //Nếu trả về true là code đã được sử dụng\r\n      if (result.data) {\r\n        toast.warning(t(\"general.dupli_code\"));\r\n        // alert(\"Code đã được sử dụng\");\r\n      } else {\r\n        //Nếu trả về false là code chưa sử dụng có thể dùng\r\n        if (id) {\r\n          updateItem({\r\n            ...this.state,\r\n          }).then(() => {\r\n            toast.success(t(\"general.updateSuccess\"));\r\n            this.props.handleOKEditClose();\r\n          });\r\n        } else {\r\n            saveItem({\r\n            ...this.state,\r\n          }).then(() => {\r\n            toast.success(t(\"general.addSuccess\"));\r\n            this.props.handleOKEditClose();\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\r\n    let { open, handleClose, item } = this.props;\r\n    this.setState({...item});\r\n  }\r\n\r\n  render() {\r\n    let {\r\n        id,\r\n        name,\r\n        code,\r\n        age,\r\n        email,\r\n        phone,\r\n        commune,\r\n        district,\r\n        province,\r\n        description,\r\n        shouldOpenNotificationPopup,\r\n    } = this.state;\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          style={{ cursor: \"move\", paddingBottom: \"0px\" }}\r\n          id=\"draggable-dialog-title\"\r\n        >\r\n          <h4 className=\"\">{id ? t(\"general.update\") : t(\"general.add\")}</h4>\r\n        </DialogTitle>\r\n\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n          <DialogContent>\r\n            <Grid className=\"\" container spacing={2}>\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.name\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.age\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"number\"\r\n                  name=\"age\"\r\n                  value={age}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.code\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.email\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.phone\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.commune\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"commune\"\r\n                  value={commune}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.district\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"district\"\r\n                  value={district}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <div>\r\n                      <span>\r\n                        <span for=\"province\" style={{ color: \"red\" }}>*</span>\r\n                        {t(\"general.province\")}\r\n                      </span>\r\n                      <select id=\"province\">\r\n                        <option value=\"hn\">Hà Nội</option>\r\n                        <option value=\"saab\">Ninh Bình</option>\r\n                        <option value=\"vw\">Thái Nguyên</option>\r\n                        <option value={[t(\"general.province\")]} selected>Audi</option>\r\n                      </select>\r\n                    </div>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"province\"\r\n                  value={province}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div className=\"flex flex-space-between flex-middle mt-12\">\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"mr-12\"\r\n                color=\"secondary\"\r\n                onClick={() => this.props.handleClose()}\r\n              >\r\n                {t(\"general.cancel\")}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ marginRight: \"15px\" }}\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                {t(\"general.save\")}\r\n              </Button>\r\n            </div>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryDialog;\r\n"]},"metadata":{},"sourceType":"module"}