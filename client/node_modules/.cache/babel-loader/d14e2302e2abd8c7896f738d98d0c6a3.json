{"ast":null,"code":"import _objectSpread from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\EmDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, DialogActions, FormControl, Paper, DialogTitle, DialogContent } from \"@material-ui/core\"; // import Paper from '@material-ui/core/Paper'\n\nimport { ValidatorForm, TextValidator, TextField, MenuItem } from \"react-material-ui-form-validator\";\nimport Draggable from \"react-draggable\";\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\nimport { saveEmployee, updateEmployee, checkCode } from \"./EmployeeService\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar EmployeeDialog = /*#__PURE__*/function (_Component) {\n  _inherits(EmployeeDialog, _Component);\n\n  function EmployeeDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EmployeeDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EmployeeDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      id: \"\",\n      name: \"\",\n      code: \"\",\n      age: \"\",\n      email: \"\",\n      phone: \"\",\n      commune: \"\",\n      district: \"\",\n      province: \"\",\n      description: \"\",\n      type: \"\",\n      shouldOpenNotificationPopup: false,\n      Notification: \"\"\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenNotificationPopup: false\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value,\n        [event.target.age]: event.target.value,\n        [event.target.code]: event.target.value,\n        [event.target.email]: event.target.value,\n        [event.target.phone]: event.target.value,\n        [event.target.commune]: event.target.value,\n        [event.target.district]: event.target.value,\n        [event.target.province]: event.target.value\n      });\n\n      console.log(\"event: \", _this.state);\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var code = _this.state.code;\n      var name = _this.state.name;\n      var age = _this.state.age;\n      var email = _this.state.email;\n      var phone = _this.state.phone;\n      var commune = _this.state.commune;\n      var province = _this.state.province;\n      var district = _this.state.district;\n      var t = _this.props.t;\n      checkCode(id, code, name, age, email, phone, commune, province, district).then(function (result) {\n        //Nếu trả về true là code đã được sử dụng\n        if (result.data) {\n          toast.warning(t(\"general.dupli_code\")); // alert(\"Code đã được sử dụng\");\n        } else {\n          //Nếu trả về false là code chưa sử dụng có thể dùng\n          if (id) {\n            updateEmployee(_objectSpread({}, _this.state)).then(function () {\n              toast.success(t(\"general.updateSuccess\"));\n\n              _this.props.handleOKEditClose();\n            });\n          } else {\n            saveEmployee(_objectSpread({}, _this.state)).then(function () {\n              toast.success(t(\"general.addSuccess\"));\n\n              _this.props.handleOKEditClose();\n            });\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EmployeeDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(_objectSpread({}, item));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          code = _this$state.code,\n          phone = _this$state.phone,\n          email = _this$state.email,\n          age = _this$state.age,\n          commune = _this$state.commune,\n          district = _this$state.district,\n          province = _this$state.province,\n          listCommune = _this$state.listCommune,\n          listDistrict = _this$state.listDistrict,\n          listProvince = _this$state.listProvince,\n          shouldOpenNotificationPopup = _this$state.shouldOpenNotificationPopup;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\",\n          paddingBottom: \"0px\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, id ? t(\"general.update\") : t(\"general.addNew\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.name\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"staff.age\")),\n        onChange: this.handleChange,\n        type: \"number\",\n        name: \"age\",\n        value: age,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.code\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.email\")),\n        onChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"staff.phoneNumber\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"phone\",\n        value: phone,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"filled-select-province\",\n        select: true,\n        label: \"T\\u1EC9nh\",\n        name: \"province\",\n        value: province,\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        helperText: \"Please select your province\",\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }\n      }, listProvince.map(function (province) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: province.id,\n          value: province,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 21\n          }\n        }, province.name);\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"filled-select-district\",\n        select: true,\n        label: \"Huy\\u1EC7n\",\n        name: \"district\",\n        value: district,\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        helperText: \"Please select your district\",\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }, listDistrict.map(function (district) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: district.id,\n          value: district,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }\n        }, district.name);\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        required: true,\n        id: \"filled-select-commune\",\n        select: true,\n        label: \"X\\xE3\",\n        name: \"commune\",\n        value: commune,\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        helperText: \"Please select your commune\",\n        variant: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }\n      }, listCommune.map(function (commune) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: commune.id,\n          value: commune,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 21\n          }\n        }, commune.name);\n      }))))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle mt-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-12\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }\n      }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: \"15px\"\n        } // onSubmit={() => {this.props.handleFormSubmit()}}\n        ,\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }\n      }, t(\"general.save\"))))));\n    }\n  }]);\n\n  return EmployeeDialog;\n}(Component);\n\nexport default EmployeeDialog;","map":{"version":3,"sources":["D:/OCEAN_TECH/L1/ThucTap/client/src/app/views/Employee/EmDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","DialogActions","FormControl","Paper","DialogTitle","DialogContent","ValidatorForm","TextValidator","TextField","MenuItem","Draggable","NotificationPopup","saveEmployee","updateEmployee","checkCode","toast","configure","autoClose","draggable","limit","PaperComponent","props","EmployeeDialog","state","id","name","code","age","email","phone","commune","district","province","description","type","shouldOpenNotificationPopup","Notification","handleDialogClose","setState","handleChange","event","source","persist","isActive","target","checked","value","console","log","handleFormSubmit","t","then","result","data","warning","success","handleOKEditClose","open","handleClose","item","listCommune","listDistrict","listProvince","i18n","cursor","paddingBottom","color","map","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  DialogActions,\r\n  FormControl,\r\n  Paper,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\n// import Paper from '@material-ui/core/Paper'\r\nimport { ValidatorForm, TextValidator, TextField, MenuItem } from \"react-material-ui-form-validator\";\r\nimport Draggable from \"react-draggable\";\r\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\r\nimport {\r\n  saveEmployee,\r\n  updateEmployee,\r\n  checkCode,\r\n} from \"./EmployeeService\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass EmployeeDialog extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    code: \"\",\r\n    age: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    commune: \"\",\r\n    district: \"\",\r\n    province: \"\",\r\n    description: \"\",\r\n    type: \"\",\r\n    shouldOpenNotificationPopup: false,\r\n    Notification: \"\",\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({ shouldOpenNotificationPopup: false });\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n      [event.target.age]: event.target.value,\r\n      [event.target.code]: event.target.value,\r\n      [event.target.email]: event.target.value,\r\n      [event.target.phone]: event.target.value,\r\n      [event.target.commune]: event.target.value,\r\n      [event.target.district]: event.target.value,\r\n      [event.target.province]: event.target.value,\r\n    });\r\n    console.log(\"event: \", this.state);\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state;\r\n    let { code } = this.state;\r\n    let { name } = this.state;\r\n    let { age } = this.state;\r\n    let { email } = this.state;\r\n    let { phone } = this.state;\r\n    let { commune } = this.state;\r\n    let { province } = this.state;\r\n    let { district } = this.state;\r\n    var { t } = this.props;\r\n    checkCode(id, code, name, age, email, phone, commune, province, district).then((result) => {\r\n      //Nếu trả về true là code đã được sử dụng\r\n      if (result.data) {\r\n        toast.warning(t(\"general.dupli_code\"));\r\n        // alert(\"Code đã được sử dụng\");\r\n      } else {\r\n        //Nếu trả về false là code chưa sử dụng có thể dùng\r\n        if (id) {\r\n          updateEmployee({\r\n            ...this.state,\r\n          }).then(() => {\r\n            toast.success(t(\"general.updateSuccess\"));\r\n            this.props.handleOKEditClose();\r\n          });\r\n        } else {\r\n          saveEmployee({\r\n            ...this.state,\r\n          }).then(() => {\r\n            toast.success(t(\"general.addSuccess\"));\r\n            this.props.handleOKEditClose();\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\r\n    let { open, handleClose, item } = this.props;\r\n    this.setState({...item});\r\n  }\r\n\r\n\r\n  componentWillUnmount\r\n\r\n  render() {\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      phone,\r\n      email,\r\n      age,\r\n      commune,\r\n      district,\r\n      province,\r\n      listCommune,\r\n      listDistrict,\r\n      listProvince,\r\n      shouldOpenNotificationPopup,\r\n    } = this.state;\r\n\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          style={{ cursor: \"move\", paddingBottom: \"0px\" }}\r\n          id=\"draggable-dialog-title\"\r\n        >\r\n          <h4 className=\"\">{id ? t(\"general.update\") : t(\"general.addNew\")}</h4>\r\n        </DialogTitle>\r\n\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n          <DialogContent>\r\n            <Grid className=\"\" container spacing={2}>\r\n              {/* name */}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.name\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n                  {/* age */}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"staff.age\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"number\"\r\n                  name=\"age\"\r\n                  value={age}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n                  {/* code */}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.code\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n                  {/* mail */}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"general.email\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n                  {/* phone */}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 \"\r\n                  label={\r\n                    <span>\r\n                      <span style={{ color: \"red\" }}>*</span>\r\n                      {t(\"staff.phoneNumber\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.required\")]}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item sm={4} xs={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-select-province\"\r\n                  select\r\n                  label=\"Tỉnh\"\r\n                  name=\"province\"\r\n                  value={province}\r\n                  onChange={this.handleChange}\r\n                  validators={[\"required\"]}\r\n                  helperText=\"Please select your province\"\r\n                  variant=\"filled\"\r\n                >\r\n                  {listProvince.map((province) => (\r\n                    <MenuItem key={province.id} value={province}>\r\n                      {province.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item sm={4} xs={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-select-district\"\r\n                  select\r\n                  label=\"Huyện\"\r\n                  name=\"district\"\r\n                  value={district}\r\n                  onChange={this.handleChange}\r\n                  validators={[\"required\"]}\r\n                  helperText=\"Please select your district\"\r\n                  variant=\"filled\"\r\n                >\r\n                  {listDistrict.map((district) => (\r\n                    <MenuItem key={district.id} value={district}>\r\n                      {district.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid item sm={4} xs={4}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-select-commune\"\r\n                  select\r\n                  label=\"Xã\"\r\n                  name=\"commune\"\r\n                  value={commune}\r\n                  onChange={this.handleChange}\r\n                  validators={[\"required\"]}\r\n                  helperText=\"Please select your commune\"\r\n                  variant=\"filled\"\r\n                >\r\n                  {listCommune.map((commune) => (\r\n                    <MenuItem key={commune.id} value={commune}>\r\n                      {commune.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div className=\"flex flex-space-between flex-middle mt-12\">\r\n              <Button\r\n                variant=\"contained\"\r\n                className=\"mr-12\"\r\n                color=\"secondary\"\r\n                onClick={() => this.props.handleClose()}\r\n              >\r\n                {t(\"general.cancel\")}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ marginRight: \"15px\" }}\r\n                // onSubmit={() => {this.props.handleFormSubmit()}}\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                {t(\"general.save\")}\r\n              </Button>\r\n            </div>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeDialog;\r\n"]},"metadata":{},"sourceType":"module"}