{"ast":null,"code":"import _toConsumableArray from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\Employee.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, TextField, IconButton, Icon, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Tooltip, FormControl, Input, InputAdornment } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { getAllEmployee, getItemById } from \"./EmployeeService\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport shortid from \"shortid\";\nimport { saveAs } from \"file-saver\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { toast } from \"react-toastify\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n}); // function MaterialButton(props) {\n//   const { t, i18n } = useTranslation();\n//   const item = props.item;\n//   return <div>\n//     <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\n//       <Icon fontSize=\"small\" color=\"primary\">edit</Icon>\n//     </IconButton>\n//   </div>;\n// }\n\nfunction EmployeeInfo(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  useEffect(function () {\n    getAllEmployee({\n      code: null,\n      name: null\n    }).then(function (res) {\n      setPosts(res.data.data);\n      console.log(res.data.data);\n    }).catch(function (error) {\n      return console.log(\"Error: \".concat(error));\n    });\n  }, []);\n  var columns = [{\n    title: \"ID\",\n    field: \"id\",\n    width: \"150\"\n  }, {\n    title: \"Name\",\n    field: \"name\",\n    width: \"150\"\n  }, {\n    title: \"Age\",\n    field: \"age\",\n    width: \"150\"\n  }, {\n    title: \"Email\",\n    field: \"email\",\n    align: \"left\",\n    width: \"150\"\n  }, {\n    title: \"Phone\",\n    field: \"person\",\n    width: \"150\"\n  }];\n  return (\n    /*#__PURE__*/\n    // <div style={{padding: 50}}>\n    //   {posts.map(item => (\n    //     <li key={item.id}>\n    //       <p>{item.id}</p>\n    //       <p>{item.name}</p>\n    //       <p>{item.age}</p>\n    //       <p>{item.email}</p>\n    //       <p>{item.phone}</p>\n    //     </li>\n    //   ))}\n    // </div>\n    React.createElement(MaterialTable, {\n      title: \"Th\\xF4ng tin nh\\xE2n vi\\xEAn\",\n      columns: columns,\n      data: posts,\n      editable: {\n        onRowAdd: function onRowAdd(newData) {\n          return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n              setPosts([].concat(_toConsumableArray(posts), [newData]));\n              resolve();\n            }, 1000);\n          });\n        },\n        onRowUpdate: function onRowUpdate(newData, oldData) {\n          return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n              var dataUpdate = _toConsumableArray(posts);\n\n              var index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setPosts(_toConsumableArray(dataUpdate));\n              resolve();\n            }, 1000);\n          });\n        },\n        onRowDelete: function onRowDelete(oldData) {\n          return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n              var dataDelete = _toConsumableArray(posts);\n\n              var index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setPosts(_toConsumableArray(dataDelete));\n              resolve();\n            }, 1000);\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    })\n  );\n}\n\nexport default EmployeeInfo;","map":{"version":3,"sources":["D:/OCEAN_TECH/L1/ThucTap/client/src/app/views/Employee/Employee.jsx"],"names":["React","Component","Grid","TextField","IconButton","Icon","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","Tooltip","FormControl","Input","InputAdornment","Link","SearchIcon","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","getAllEmployee","getItemById","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","shortid","saveAs","useEffect","useState","axios","withStyles","toast","configure","autoClose","draggable","limit","EmployeeInfo","props","posts","setPosts","code","name","then","res","data","console","log","catch","error","columns","title","field","width","align","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  Icon,\r\n  Button,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  Checkbox,\r\n  TablePagination,\r\n  Tooltip,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader,\r\n} from \"material-table\";\r\nimport { getAllEmployee,getItemById } from \"./EmployeeService\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport shortid from \"shortid\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { toast } from \"react-toastify\";\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\n\r\n// function MaterialButton(props) {\r\n//   const { t, i18n } = useTranslation();\r\n//   const item = props.item;\r\n//   return <div>\r\n//     <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n//       <Icon fontSize=\"small\" color=\"primary\">edit</Icon>\r\n//     </IconButton>\r\n//   </div>;\r\n// }\r\n\r\nfunction EmployeeInfo(props) {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllEmployee({ code: null, name: null })\r\n      .then(res => {\r\n        setPosts(res.data.data)\r\n        console.log(res.data.data)\r\n      })\r\n      .catch(error => console.log(`Error: ${error}`));\r\n  }, []);\r\n\r\n\r\n    let columns = [\r\n      { title: (\"ID\"), field: \"id\", width: \"150\" },\r\n      { title: (\"Name\"), field: \"name\", width: \"150\" },\r\n      { title: (\"Age\"), field: \"age\", width: \"150\" },\r\n      { title: (\"Email\"), field: \"email\", align: \"left\", width: \"150\" },\r\n      { title: (\"Phone\"), field: \"person\", width: \"150\" },\r\n    ];\r\n\r\n  return (\r\n    // <div style={{padding: 50}}>\r\n    //   {posts.map(item => (\r\n    //     <li key={item.id}>\r\n    //       <p>{item.id}</p>\r\n    //       <p>{item.name}</p>\r\n    //       <p>{item.age}</p>\r\n    //       <p>{item.email}</p>\r\n    //       <p>{item.phone}</p>\r\n    //     </li>\r\n    //   ))}\r\n    // </div>\r\n    <MaterialTable\r\n      title=\"Thông tin nhân viên\"\r\n      columns={columns}\r\n      data={posts}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setPosts([...posts, newData]);\r\n\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...posts];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setPosts([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...posts];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setPosts([...dataDelete]);\r\n\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EmployeeInfo;\r\n"]},"metadata":{},"sourceType":"module"}