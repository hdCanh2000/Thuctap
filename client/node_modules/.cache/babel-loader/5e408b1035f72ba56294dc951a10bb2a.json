{"ast":null,"code":"import _classCallCheck from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\Employee.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, IconButton, Icon, TablePagination, Button, TextField, InputAdornment, Input } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { findUserByUserName, searchByPage, getItemById, getListHealthOrgByUser, SearchUserByUserName, searchByDto } from \"./EmployeeService\";\nimport UserEditorDialog from \"./EmployeeDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport shortid from \"shortid\";\nimport { saveAs } from 'file-saver';\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"edit\")));\n}\n\nvar User = /*#__PURE__*/function (_Component) {\n  _inherits(User, _Component);\n\n  function User() {\n    _classCallCheck(this, User);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(User).apply(this, arguments));\n  }\n\n  _createClass(User, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var columns = [{\n        title: t(\"Action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                getItemById(rowData.id).then(function (_ref) {\n                  var data = _ref.data;\n\n                  if (data.parent === null) {\n                    data.parent = {};\n                  }\n\n                  _this.setState({\n                    item: data,\n                    shouldOpenEditorDialog: true\n                  });\n                });\n              } else if (method === 1) {\n                _this.handleDelete(rowData.id);\n              } else {\n                alert('Call Selected Here:' + rowData.id);\n              }\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 28\n            }\n          });\n        }\n      }, {\n        title: t(\"username\"),\n        field: \"username\",\n        width: \"150\"\n      }, {\n        title: t(\"user.displayName\"),\n        field: \"person.displayName\",\n        width: \"150\"\n      }, {\n        title: t(\"general.email\"),\n        field: \"email\",\n        align: \"left\",\n        width: \"150\"\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"Dashboard.manage\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: t('user.title')\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 5,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this.handleEditItem({\n            startDate: new Date(),\n            endDate: new Date(),\n            isAddNew: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, t('Add')), shouldOpenConfirmationDeleteAllDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: shouldOpenConfirmationDeleteAllDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAll,\n        text: t('DeleteAllConfirm'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, shouldOpenEditorDialog && /*#__PURE__*/React.createElement(UserEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t('DeleteConfirm'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('List'),\n        data: itemList,\n        columns: columns //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n        ,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        } // options={{\n        //   selection: false,\n        //   actionsColumnIndex: 0,\n        //   paging: false,\n        //   search: false\n        // }}\n        ,\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this.data = rows; // this.setState({selectedItems:rows});\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          maxBodyHeight: '450px',\n          minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref2) {\n          var from = _ref2.from,\n              to = _ref2.to,\n              count = _ref2.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["D:/OCEAN_TECH/L1/ThucTap/client/src/app/views/Employee/Employee.jsx"],"names":["React","Component","Grid","IconButton","Icon","TablePagination","Button","TextField","InputAdornment","Input","Link","SearchIcon","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","findUserByUserName","searchByPage","getItemById","getListHealthOrgByUser","SearchUserByUserName","searchByDto","UserEditorDialog","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","shortid","saveAs","MaterialButton","props","t","i18n","item","onSelect","User","columns","title","field","align","width","render","rowData","method","id","then","data","parent","setState","shouldOpenEditorDialog","handleDelete","alert","name","path","handleEditItem","startDate","Date","endDate","isAddNew","shouldOpenConfirmationDeleteAllDialog","handleDialogClose","handleDeleteAll","handleOKEditClose","shouldOpenConfirmationDialog","handleConfirmationResponse","itemList","row","rows","list","find","a","parentId","Toolbar","selection","actionsColumnIndex","paging","search","rowStyle","index","backgroundColor","maxBodyHeight","minBodyHeight","headerStyle","color","padding","toolbar","body","emptyDataSourceMessage","from","to","count","totalElements","rowsPerPage","page","handleChangePage","setRowsPerPage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Icon,\r\n  TablePagination,\r\n  Button,\r\n  TextField,\r\n  InputAdornment,\r\n  Input\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { findUserByUserName, searchByPage, getItemById, getListHealthOrgByUser,SearchUserByUserName,searchByDto} from \"./EmployeeService\";\r\nimport UserEditorDialog from \"./EmployeeDialog\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport shortid from \"shortid\";\r\nimport { saveAs } from 'file-saver';\r\n\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n      <Icon fontSize=\"small\" color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n    {/* <IconButton onClick={() => props.onSelect(item, 1)}>\r\n      <Icon color=\"error\">delete</Icon>\r\n    </IconButton> */}\r\n  </div>;\r\n}\r\n\r\nclass User extends Component {\r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n\r\n    let columns = [\r\n      {\r\n        title: t(\"Action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData => <MaterialButton item={rowData}\r\n          onSelect={(rowData, method) => {\r\n            if (method === 0) {\r\n              getItemById(rowData.id).then(({ data }) => {\r\n                if (data.parent === null) {\r\n                  data.parent = {};\r\n                }\r\n                this.setState({\r\n                  item: data,\r\n                  shouldOpenEditorDialog: true\r\n                });\r\n              })\r\n            } else if (method === 1) {\r\n              this.handleDelete(rowData.id);\r\n            } else {\r\n              alert('Call Selected Here:' + rowData.id);\r\n            }\r\n          }}\r\n        />\r\n      },\r\n      { title: t(\"username\"), field: \"username\", width: \"150\" },\r\n      { title: t(\"user.displayName\"), field: \"person.displayName\", width: \"150\" },\r\n      { title: t(\"general.email\"), field: \"email\", align: \"left\", width: \"150\" },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: t(\"Dashboard.manage\"), path: \"/directory/apartment\" },{ name: t('user.title') }]} />\r\n        </div>\r\n\r\n        <Grid container spacing={3}>\r\n          \r\n          <Grid item lg={5} md={5} sm={5} xs={12}>\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleEditItem({ startDate: new Date(), endDate: new Date(), isAddNew: true });\r\n              }\r\n              }\r\n            >\r\n              {t('Add')}\r\n            </Button>\r\n            {shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                text={t('DeleteAllConfirm')}\r\n              />\r\n            )}\r\n            </Grid>\r\n            {/* <TextField\r\n              label={t('EnterSearch')}\r\n              className=\"mb-16 mr-10\"\r\n              type=\"text\"\r\n              name=\"keyword\"\r\n              value={keyword}\r\n              onKeyDown={this.handleKeyDownEnterSearch}\r\n              onChange={this.handleTextChange} />\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\" onClick={() => this.search(keyword)}>\r\n              {t('Search')}\r\n            </Button> */}\r\n\r\n            {/* <Grid item lg={7} md={7} sm={7} xs={12}>\r\n            <Input\r\n              label={t('EnterSearch')}\r\n              type=\"text\"\r\n              name=\"keyword\"\r\n              value={keyword}\r\n              onChange={this.handleTextChange}\r\n              onKeyDown={this.handleKeyDownEnterSearch}\r\n              className=\"w-100 mb-16 mr-10 stylePlaceholder\"\r\n              id=\"search_box\"\r\n              placeholder={t('general.enterSearch')}\r\n              startAdornment={\r\n                <InputAdornment >\r\n                  <Link to=\"#\">\r\n                    <SearchIcon\r\n                    onClick={() => this.search(keyword)}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"0\",\r\n                      right: \"0\"\r\n                    }} /></Link>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </Grid> */}\r\n\r\n\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              {shouldOpenEditorDialog && (\r\n                <UserEditorDialog t={t} i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={shouldOpenEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  item={item}\r\n                />\r\n              )}\r\n\r\n              {shouldOpenConfirmationDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"confirm\")}\r\n                  open={shouldOpenConfirmationDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationResponse}\r\n                  text={t('DeleteConfirm')}\r\n                />\r\n              )}\r\n            </div>\r\n            <MaterialTable\r\n              title={t('List')}\r\n              data={itemList}\r\n              columns={columns}\r\n              //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n              parentChildData={(row, rows) => {\r\n                var list = rows.find(a => a.id === row.parentId);\r\n                return list;\r\n              }}\r\n              // options={{\r\n              //   selection: false,\r\n              //   actionsColumnIndex: 0,\r\n              //   paging: false,\r\n              //   search: false\r\n              // }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <MTableToolbar {...props} />\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n                // this.setState({selectedItems:rows});\r\n              }}\r\n              options={{\r\n                selection: false,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: (rowData, index) => ({\r\n                  backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\r\n                }), \r\n                maxBodyHeight: '450px',\r\n                minBodyHeight: '370px',\r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color:'#fff',\r\n                },\r\n                padding: 'dense',\r\n                toolbar: false\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            />\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t('general.rows_per_page')}\r\n              labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n              count={totalElements}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Grid>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}