{"ast":null,"code":"import _toConsumableArray from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\OCEAN_TECH\\\\L1\\\\ThucTap\\\\client\\\\src\\\\app\\\\views\\\\Employee\\\\EmployeeDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Dialog, Button, Grid, InputLabel, FormControl, MenuItem, Select, InputAdornment, Checkbox, TextField, DialogActions, FormControlLabel, DialogTitle, DialogContent, TablePagination, IconButton, Icon } from \"@material-ui/core\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getAllEmployee, getUserByEmail, saveUser, addNewUser, getAllRoles, saveHealthOrgByUser, getListHealthOrgByUser } from \"./EmployeeService\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"../../../styles/views/_loadding.scss\";\nimport clsx from \"clsx\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../../../styles/views/_style.scss\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction EmployeeDialog() {\n  // const { useState } = React;\n  var _useState = useState([{\n    title: \"Name\",\n    field: \"name\"\n  }, {\n    title: \"Surname\",\n    field: \"surname\",\n    initialEditValue: \"initial edit value\"\n  }, {\n    title: \"Birth Year\",\n    field: \"birthYear\",\n    type: \"numeric\"\n  }, {\n    title: \"Birth Place\",\n    field: \"birthCity\",\n    lookup: {\n      34: \"İstanbul\",\n      63: \"Şanlıurfa\"\n    }\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      columns = _useState2[0],\n      setColumns = _useState2[1]; // useEffect(() => {\n  //   getAllEmployee({ code: null, name: null }).then((res) => {\n  //     console.log(res);\n  //     return res.data.data;\n  //   });\n  // }, []);\n\n\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Th\\xF4ng tin nh\\xE2n vi\\xEAn\",\n    columns: columns,\n    data: data,\n    editable: {\n      onRowAdd: function onRowAdd(newData) {\n        return new Promise(function (resolve, reject) {\n          setTimeout(function () {\n            setData([].concat(_toConsumableArray(data), [newData]));\n            resolve();\n          }, 1000);\n        });\n      },\n      onRowUpdate: function onRowUpdate(newData, oldData) {\n        return new Promise(function (resolve, reject) {\n          setTimeout(function () {\n            var dataUpdate = _toConsumableArray(data);\n\n            var index = oldData.tableData.id;\n            dataUpdate[index] = newData;\n            setData(_toConsumableArray(dataUpdate));\n            resolve();\n          }, 1000);\n        });\n      },\n      onRowDelete: function onRowDelete(oldData) {\n        return new Promise(function (resolve, reject) {\n          setTimeout(function () {\n            var dataDelete = _toConsumableArray(data);\n\n            var index = oldData.tableData.id;\n            dataDelete.splice(index, 1);\n            setData(_toConsumableArray(dataDelete));\n            resolve();\n          }, 1000);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default EmployeeDialog;","map":{"version":3,"sources":["D:/OCEAN_TECH/L1/ThucTap/client/src/app/views/Employee/EmployeeDialog.jsx"],"names":["React","Component","useState","useEffect","axios","Dialog","Button","Grid","InputLabel","FormControl","MenuItem","Select","InputAdornment","Checkbox","TextField","DialogActions","FormControlLabel","DialogTitle","DialogContent","TablePagination","IconButton","Icon","Breadcrumb","ConfirmationDialog","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","Autocomplete","ValidatorForm","TextValidator","getAllEmployee","getUserByEmail","saveUser","addNewUser","getAllRoles","saveHealthOrgByUser","getListHealthOrgByUser","AsynchronousAutocomplete","Draggable","Paper","clsx","toast","configure","autoClose","draggable","limit","EmployeeDialog","title","field","initialEditValue","type","lookup","columns","setColumns","data","onRowAdd","newData","Promise","resolve","reject","setTimeout","setData","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  InputAdornment,\r\n  Checkbox,\r\n  TextField,\r\n  DialogActions,\r\n  FormControlLabel,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TablePagination,\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader,\r\n} from \"material-table\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {\r\n  getAllEmployee,\r\n  getUserByEmail,\r\n  saveUser,\r\n  addNewUser,\r\n  getAllRoles,\r\n  saveHealthOrgByUser,\r\n  getListHealthOrgByUser,\r\n} from \"./EmployeeService\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"../../../styles/views/_loadding.scss\";\r\nimport clsx from \"clsx\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../styles/views/_style.scss\";\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\nfunction EmployeeDialog() {\r\n  // const { useState } = React;\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Name\", field: \"name\" },\r\n    {\r\n      title: \"Surname\",\r\n      field: \"surname\",\r\n      initialEditValue: \"initial edit value\",\r\n    },\r\n    { title: \"Birth Year\", field: \"birthYear\", type: \"numeric\" },\r\n    {\r\n      title: \"Birth Place\",\r\n      field: \"birthCity\",\r\n      lookup: { 34: \"İstanbul\", 63: \"Şanlıurfa\" },\r\n    },\r\n  ]);\r\n\r\n  // useEffect(() => {\r\n  //   getAllEmployee({ code: null, name: null }).then((res) => {\r\n  //     console.log(res);\r\n  //     return res.data.data;\r\n  //   });\r\n  // }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Thông tin nhân viên\"\r\n      columns={columns}\r\n      data={data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              setData([...data, newData]);\r\n\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EmployeeDialog;\r\n"]},"metadata":{},"sourceType":"module"}